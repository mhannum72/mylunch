<!DOCTYPE html>
<!-- 

TODO:
* Make the upper left-hand corner menu nicer
* Make the 'next' and 'previous' page commands SLIDE new pictures on rather than
  load an entirely new page.
* Upload should be a pop-up on this page rather than a full-fledged page.  If 
  you upload via a pop-up, the pictures could shift so that the newly uploaded 
  picture is shown first.

-->

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <title>Edit Meals</title>
        <link rel="stylesheet" href="/css/reset.css" />
        <link rel="stylesheet" href="/css/960.css" />
        <link rel="stylesheet" href="/css/text.css" />
        <link rel="stylesheet" href="/css/mealdisp.css" />
    </head>
    <body>


    <script src="/jquery.js"></script>
    <script type="text/javascript">

        function global_editmeals(username, showPicsPerPage, nextPage, prevPage) {
            this.username = username;
            this.showPicsPerPage = showPicsPerPage;
            this.nextPage = nextPage;
            this.prevPage = prevPage;
            return this;
        }

        var page_globals = global_editmeals(
                "<%= user.username %>", 
                <%= user.showPicsPerPage %>,
                <%= nextpage != undefined ? nextpage:0 %>,
                <%= prevpage != undefined ? prevpage:0 %>);

        function updateReviewAjax(meal, review) {
            $.ajax({
                url: '/savereview',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(
                    {
                        username: meal.username,
                        timestamp: meal.timestamp,
                        review: review
                    }),
                dataType: 'json',
                // TODO: consolidated JSON response handling
                complete: function(resp, astat){
                }
            });
        }

        function updateRatingAjax(meal, rating) {
            $.ajax({
                url: '/saverating',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(
                    {
                        username: meal.username,
                        timestamp: meal.timestamp,
                        rating: rating
                    }),
                dataType: 'json',
                complete: function(resp, astat) {
                }
            });
        }

        function updateMealAjax(meal, newMeal) {
            $.ajax({
                url: '/savemeal',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(
                    {
                        username: meal.username,
                        timestamp: meal.timestamp,
                        meal: newMeal
                    }),
                dataType: 'json',
                complete: function(resp, astat) {
                }
            });
        }

        var textAreaWidthCols = 65;

        $.browser.chrome = /chrome/.test(navigator.userAgent.toLowerCase());

        if($.browser.mozilla) {
            textAreaWidthCols = 65;
        }
        else if($.browser.chrome) {
            textAreaWidthCols = 57;
        }

        // TODO
        function toggleDeleteMode() {
        }

        function uploadMealPopup() {

            var hiddenElements = $('#hiddenElements');

            hiddenElements.empty();

            var hiddenIFrame = $(document.createElement('iframe'))
                .attr('style', 'width:0px;height:0px;border:0px;')
                .attr('name', 'hiddenIFrame')
                .attr('id', 'hiddenIFrame');

            hiddenIFrame.appendTo(hiddenElements);

            var uploadForm = $(document.createElement('form'))
                .attr('id', 'uploadForm')
                .attr('name', 'uploadForm')
                .attr('method', 'post')
                .attr('enctype', 'multipart/form-data')
                .attr('action', '/editmealsupload')
                .attr('target', 'hiddenIFrame');

            uploadForm.appendTo(hiddenIFrame);

            // Wait for the html of the hidden iframe to change: tells you that
            // the upload was successful.
            var fileUpload = $(document.createElement('input'))
                .attr('type', 'file')
                .attr('name', 'inputUpload')
                .attr('id', 'inputUpload');

            // TODO - this could be slow.. maybe i could show a popup saying that things are uploading?
            function checkUploaded() {

                var hiddenIFrame = $('#hiddenIFrame');
                var bodyText = hiddenIFrame.contents().find('body').html();
                var regex = /^SUCCESS [0-9]+$/;

                // Put a reasonable hard-timeout here.  Uploading seems to be wanky - 
                // if the timeout expires, reload the 'main' page with a special
                // tag that says 'edit the first picture if it's greater than the 
                // first picture I've ever seen (pass that in the request).  Otherwise, 
                // print an error message.
                //
                // TODO: what's the bottleneck here?
                if(bodyText == "") {
                    setTimeout(checkUploaded, 1000);
                    return;
                }

                // Success case 
                if(regex.test(bodyText)) {
                    var tstring = bodyText.split(" ").pop();
                    var timestamp = parseInt(tstring, 10);
                    $('#pictureGridDiv').html('');
                    drawNextMeals(timestamp);
                    showAttributes(page_globals.username, timestamp, 0);
                    return;
                }

                // Failure case .. not sure what to do.. print it to an error div?
                /* Unexpected stuff.. */

            }

            fileUpload.change(function() {
                uploadForm.submit();
                setTimeout(checkUploaded, 1000);
            });

            fileUpload.appendTo(uploadForm);

            $('#inputUpload').click();

        } /* uploadMealPopup */

        // Meal attributes / edit modal
        function showAttributesMealInfo(meal, restaurant, restaurantId) {

            var username = meal.username;
            var timestamp = meal.timestamp;

            var popup = $(document.createElement('div'))
                .attr('id', 'mealAttributes')
                .attr('class', 'mealAttributesPopup');

            var url = "/pics/" + username + "/" + timestamp;

            var img = $(document.createElement('img'))
                .attr('src', url);

            var centr = $(document.createElement('center'));

            img.appendTo(centr);

            var closexContainer = $(document.createElement('div'))
                .attr('id', 'mealAttributesCloseContainer')
                .attr('class', 'mealAttributesCloseContainer');

            var closex = $(document.createElement('a'))
                .attr('id', 'mealAttributesCloseButton')
                .attr('class', 'mealAttributesCloseButton')
                .html('x');

            closex.click(function(){
                popup.fadeOut(0);
                $('#maskFade').css({'display':'none'});
                popup.remove();
            });

            closex.appendTo(closexContainer);
            closexContainer.appendTo(popup);

            centr.appendTo(popup);

            // Create a class_8 container .. everything goes in here
            var class8 = $(document.createElement('div'))
                .attr('id', 'mealAttributesClass8')
                .attr('class', 'container_8');

            // Create a grid to hold the title
            var grid_title_pre = $(document.createElement('div'))
                .attr('class', 'grid_3')
                .html('Title');

            var title = "untitled";

            if(undefined != meal.picTitle && meal.picTitle.length > 0) {
                title = meal.picTitle;
            }

            var hovertitle = $(document.createElement('a'))
                .attr('id', 'titleEdit')
                .attr('class', 'titleEdit')
                .attr('title', 'click to edit')
                .html(title);

            // Title grid
            var grid_title = $(document.createElement('div'))
                .attr('class', 'grid_5')
                .attr('id', 'pop_title');

            hovertitle.appendTo(grid_title);

            hovertitle.click(function(){

                var titleEditInput = $(document.createElement('input'))
                    .attr('type', 'text')
                    .attr('class', 'titleEditInput')
                    .attr('name', 'titleEditInput')
                    .attr('maxlength', '29')
                    .attr('size', '29')
                    .val(meal.picTitle);

                titleEditInput.appendTo(grid_title);
                $('#titleEdit').css({'display':'none'});

                titleEditInput.focus();

                function blurTitleInput(meal, titleEditInput, keepcurrent) {

                    if(titleEditInput.val() != meal.picTitle && keepcurrent == 0) {

                        var titleEdit = '#gridTimestamp' + meal.timestamp + ' > div > center > .titleText';

                        meal.picTitle = titleEditInput.val();
                        $('#titleEdit').html(meal.picTitle);
                        $(titleEdit).html(meal.picTitle);

                        $.ajax({
                            url: '/savetitle',
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify(
                                {
                                    username: meal.username,
                                    timestamp: meal.timestamp,
                                    title: titleEditInput.val()
                                }),
                            dataType: 'json',
                            complete: function(resp, astat) {
                            }
                        });
                    }
                    $('#titleEdit').css({'display':'block'});
                    titleEditInput.remove();
                }


                // I want certain keys (return or tab) to force a blur
                titleEditInput.keydown(function(e){
                    var code = (e.keyCode ? e.keyCode : e.which);
                    switch(code) {
                        case 13:
                        case 9:
                            titleEditInput.blur();
                            return false;
                            break;
                        case 27:
                            blurTitleInput(meal, titleEditInput, 1);
                            return false;
                            break;
                    }
                });

                titleEditInput.blur(function() {
                        blurTitleInput(meal, titleEditInput, 0);
                });
            });

            var grid_title_clear = $(document.createElement('div'))
                .attr('class', 'clear');

            // Append title
            grid_title_pre.appendTo(class8);
            grid_title.appendTo(class8);
            grid_title_clear.appendTo(class8);

            // When uploaded.  Maybe this belongs somewhere else?  maybe there should be 
            // an inputable calendar (i think theres a jquery plugin for that)?  
            // will think about it.
            //
            /*
            var grid_uploaded_pre = $(document.createElement('div'))
                .attr('class', 'grid_3')
                .html('Uploaded');

            var localeDate = new Date(meal.timestamp).toLocaleDateString();

            var grid_uploaded = $(document.createElement('div'))
            .attr('class', 'grid_5')
                .attr('id', 'pop_date_uploaded')
                .html(localeDate);

            var grid_uploaded_clear = $(document.createElement('div'))
                    .attr('class', 'clear');

            grid_uploaded_pre.appendTo(class8);
            grid_uploaded.appendTo(class8);
            grid_uploaded_clear.appendTo(class8);
            */

            var whichmeal = meal.meal.charAt(0).toUpperCase() + meal.meal.slice(1);

            // Which meal
            var grid_meal_pre = $(document.createElement('div'))
                .attr('class', 'grid_3')
                .html('Meal');

            var grid_meal = $(document.createElement('div'))
                .attr('class', 'grid_5')
                .attr('id', 'pop_meal')
                .html(whichmeal);

            // Create the which-meal selection menu
            var grid_meal_select_div = $(document.createElement('div'))
                .attr('class', 'meal_select_menu_div')
                .attr('id', 'meal_select_menu_div')
                .css({'display': 'none'});

            var grid_meal_select = $(document.createElement('ul'))
                .attr('class', 'meal_select_menu')
                .attr('id', 'meal_select_menu')
                .attr('name', 'meal_select_menu');

            // BREAKFAST
            var grid_meal_select_meal_breakfast = $(document.createElement('li'))
                .attr('class', 'meal_select_menu_selection')
                .attr('name', 'meal_select_menu_breakfast')
                .attr('id', 'meal_select_menu_breakfast');
            var grid_meal_select_meal_breakfast_anchor = $(document.createElement('a'))
                .attr('id', 'meal_select_breakfast_anchor')
                .attr('class', 'meal_select_anchor')
                .html('Breakfast');
            if(meal.meal == "breakfast") {
                grid_meal_select_meal_breakfast_anchor.attr('class', 'grid_meal_selected');
            }
            
            grid_meal_select_meal_breakfast_anchor.click(function() {
                if(meal.meal == "breakfast") {
                    return;
                }
                if(meal.meal == "lunch" ) {
                    grid_meal_select_meal_lunch_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "dinner" ) {
                    grid_meal_select_meal_dinner_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "snack" ) {
                    grid_meal_select_meal_snack_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "other" ) {
                    grid_meal_select_meal_other_anchor.removeClass('grid_meal_selected');
                }
                grid_meal_select_meal_breakfast_anchor.attr('class', 'grid_meal_selected');
                meal.meal = "breakfast";
                whichmeal = meal.meal.charAt(0).toUpperCase() + meal.meal.slice(1);
                grid_meal.html(whichmeal);
                updateMealAjax(meal, "breakfast");
            });

            grid_meal_select_meal_breakfast_anchor.appendTo(grid_meal_select_meal_breakfast);

            // LUNCH
            var grid_meal_select_meal_lunch = $(document.createElement('li'))
                .attr('class', 'meal_select_menu_selection')
                .attr('name', 'meal_select_menu_lunch')
                .attr('id', 'meal_select_menu_lunch');

            var grid_meal_select_meal_lunch_anchor = $(document.createElement('a'))
                .attr('id', 'meal_select_lunch_anchor')
                .attr('class', 'meal_select_anchor')
                .html('Lunch');
            if(meal.meal == "lunch") {
                grid_meal_select_meal_lunch_anchor.attr('class', 'grid_meal_selected');
            }
            grid_meal_select_meal_lunch_anchor.click(function() {
                if(meal.meal == "lunch") {
                    return;
                }
                if(meal.meal == "breakfast" ) {
                    grid_meal_select_meal_breakfast_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "dinner" ) {
                    grid_meal_select_meal_dinner_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "snack" ) {
                    grid_meal_select_meal_snack_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "other" ) {
                    grid_meal_select_meal_other_anchor.removeClass('grid_meal_selected');
                }
                grid_meal_select_meal_lunch_anchor.attr('class', 'grid_meal_selected');
                meal.meal = "lunch";
                whichmeal = meal.meal.charAt(0).toUpperCase() + meal.meal.slice(1);
                grid_meal.html(whichmeal);
                updateMealAjax(meal, "lunch");
            });
            grid_meal_select_meal_lunch_anchor.appendTo(grid_meal_select_meal_lunch);

            // DINNER
            var grid_meal_select_meal_dinner = $(document.createElement('li'))
                .attr('class', 'meal_select_menu_selection')
                .attr('name', 'meal_select_menu_dinner')
                .attr('id', 'meal_select_menu_dinner');
            var grid_meal_select_meal_dinner_anchor = $(document.createElement('a'))
                .attr('id', 'meal_select_dinner_anchor')
                .attr('class', 'meal_select_anchor')
                .html('Dinner');
            if(meal.meal == "dinner") {
                grid_meal_select_meal_dinner_anchor.attr('class', 'grid_meal_selected');
            }
            grid_meal_select_meal_dinner_anchor.click(function() {
                if(meal.meal == "dinner") {
                    return;
                }
                if(meal.meal == "breakfast" ) {
                    grid_meal_select_meal_breakfast_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "lunch" ) {
                    grid_meal_select_meal_lunch_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "snack" ) {
                    grid_meal_select_meal_snack_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "other" ) {
                    grid_meal_select_meal_other_anchor.removeClass('grid_meal_selected');
                }
                grid_meal_select_meal_dinner_anchor.attr('class', 'grid_meal_selected');
                meal.meal = "dinner";
                whichmeal = meal.meal.charAt(0).toUpperCase() + meal.meal.slice(1);
                grid_meal.html(whichmeal);
                updateMealAjax(meal, "dinner");
            });
            grid_meal_select_meal_dinner_anchor.appendTo(grid_meal_select_meal_dinner);

            // SNACK
            var grid_meal_select_meal_snack = $(document.createElement('li'))
                .attr('class', 'meal_select_menu_selection')
                .attr('name', 'meal_select_menu_snack')
                .attr('id', 'meal_select_menu_snack');
            var grid_meal_select_meal_snack_anchor = $(document.createElement('a'))
                .attr('id', 'meal_select_snack_anchor')
                .attr('class', 'meal_select_anchor')
                .html('Snack');
            if(meal.meal == "snack") {
                grid_meal_select_meal_snack_anchor.attr('class', 'grid_meal_selected');
            }
            grid_meal_select_meal_snack_anchor.click(function() {
                if(meal.meal == "snack") {
                    return;
                }
                if(meal.meal == "breakfast" ) {
                    grid_meal_select_meal_breakfast_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "lunch" ) {
                    grid_meal_select_meal_lunch_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "dinner" ) {
                    grid_meal_select_meal_dinner_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "other" ) {
                    grid_meal_select_meal_other_anchor.removeClass('grid_meal_selected');
                }
                grid_meal_select_meal_snack_anchor.attr('class', 'grid_meal_selected');
                meal.meal = "snack";
                whichmeal = meal.meal.charAt(0).toUpperCase() + meal.meal.slice(1);
                grid_meal.html(whichmeal);
                updateMealAjax(meal, "snack");
            });
            grid_meal_select_meal_snack_anchor.appendTo(grid_meal_select_meal_snack);

            var grid_meal_select_meal_other = $(document.createElement('li'))
                .attr('class', 'meal_select_menu_selection')
                .attr('name', 'meal_select_menu_other')
                .attr('id', 'meal_select_menu_other');
            var grid_meal_select_meal_other_anchor = $(document.createElement('a'))
                .attr('id', 'meal_select_other_anchor')
                .attr('class', 'meal_select_anchor')
                .html('Other');
            if(meal.meal == "other") {
                grid_meal_select_meal_other_anchor.attr('class', 'grid_meal_selected');
            }
            grid_meal_select_meal_other_anchor.click(function() {
                if(meal.meal == "other") {
                    return;
                }
                if(meal.meal == "breakfast" ) {
                    grid_meal_select_meal_breakfast_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "lunch" ) {
                    grid_meal_select_meal_lunch_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "dinner" ) {
                    grid_meal_select_meal_dinner_anchor.removeClass('grid_meal_selected');
                }
                if(meal.meal == "snack" ) {
                    grid_meal_select_meal_snack_anchor.removeClass('grid_meal_selected');
                }
                grid_meal_select_meal_other_anchor.attr('class', 'grid_meal_selected');
                meal.meal = "other";
                whichmeal = meal.meal.charAt(0).toUpperCase() + meal.meal.slice(1);
                grid_meal.html(whichmeal);
                updateMealAjax(meal, "other");
            });
            grid_meal_select_meal_other_anchor.appendTo(grid_meal_select_meal_other);

            // build menu
            grid_meal_select_meal_breakfast.appendTo(grid_meal_select);
            grid_meal_select_meal_lunch.appendTo(grid_meal_select);
            grid_meal_select_meal_dinner.appendTo(grid_meal_select);
            grid_meal_select_meal_snack.appendTo(grid_meal_select);
            grid_meal_select_meal_other.appendTo(grid_meal_select);
            grid_meal_select.appendTo(grid_meal_select_div);

            // Define hover behaviors
            grid_meal.mouseenter(
                function(){
                    $('#meal_select_menu_div').css({ 'display': 'block' });
                }
            );

            grid_meal_select_div.mouseleave(
                function(){
                    $('#meal_select_menu_div').css({ 'display': 'none' });
                }
            );

            var grid_meal_clear = $(document.createElement('div'))
                .attr('class', 'clear');

            // Append meal
            grid_meal_pre.appendTo(class8);
            grid_meal.appendTo(class8);
            grid_meal_select_div.appendTo(class8);
            grid_meal_clear.appendTo(class8);

            // How many stars
            var grid_stars_pre = $(document.createElement('div'))
                .attr('class', 'grid_3')
                .html('Rating');

            // Rating selector container
            var grid_stars = $(document.createElement('div'))
                .attr('class', 'grid_5')
                .attr('id', 'pop_rating')
                .attr('name', 'name_rating');

            // Create a sub-div that will contain the star-elements
            var grid_stars_select_div = $(document.createElement('div'))
                .attr('class', 'stars_select_menu_div')
                .attr('id', 'stars_select_menu_div');

            // Start an unordered list
            var grid_stars_select = $(document.createElement('ul'))
                .attr('class', 'stars_select_menu')
                .attr('id', 'stars_select_menu')
                .attr('name', 'stars_select_menu');

            // There will be five of them
            var grid_stars_select_stars_0 = $(document.createElement('li'))
                .attr('class', 'star_select_menu_selection')
                .attr('name', 'star_select_menu_0')
                .attr('id', 'star_select_menu_0');

            var grid_stars_select_stars_0_anchor = $(document.createElement('a'))
                .attr('id', 'stars_select_stars_0_anchor')
                .attr('class', 'stars_select_anchor')
                .css({ 'color' : '#fff' })
                .html('&#11036');

            var grid_stars_select_stars_1_anchor = $(document.createElement('a'))
                .attr('id', 'stars_select_stars_1_anchor')
                .attr('class', 'stars_select_anchor')
                .html('&#9733;');

            var grid_stars_select_stars_2_anchor = $(document.createElement('a'))
                .attr('id', 'stars_select_stars_2_anchor')
                .attr('class', 'stars_select_anchor')
                .html('&#9733;');

            var grid_stars_select_stars_3_anchor = $(document.createElement('a'))
                .attr('id', 'stars_select_stars_3_anchor')
                .attr('class', 'stars_select_anchor')
                .html('&#9733;');

            var grid_stars_select_stars_4_anchor = $(document.createElement('a'))
                .attr('id', 'stars_select_stars_4_anchor')
                .attr('class', 'stars_select_anchor')
                .html('&#9733;');

            var grid_stars_select_stars_5_anchor = $(document.createElement('a'))
                .attr('id', 'stars_select_stars_5_anchor')
                .attr('class', 'stars_select_anchor')
                .html('&#9733;');

            // TODO - this could be more efficient 
            function reset_stars_select_classes_hover() {
                grid_stars_select_stars_0_anchor.removeClass("stars_unselected_star_hover");
                grid_stars_select_stars_1_anchor.removeClass("stars_unselected_star_hover");
                grid_stars_select_stars_2_anchor.removeClass("stars_unselected_star_hover");
                grid_stars_select_stars_3_anchor.removeClass("stars_unselected_star_hover");
                grid_stars_select_stars_4_anchor.removeClass("stars_unselected_star_hover");
                grid_stars_select_stars_5_anchor.removeClass("stars_unselected_star_hover");

                grid_stars_select_stars_0_anchor.removeClass("stars_selected_star_hover");
                grid_stars_select_stars_1_anchor.removeClass("stars_selected_star_hover");
                grid_stars_select_stars_2_anchor.removeClass("stars_selected_star_hover");
                grid_stars_select_stars_3_anchor.removeClass("stars_selected_star_hover");
                grid_stars_select_stars_4_anchor.removeClass("stars_selected_star_hover");
                grid_stars_select_stars_5_anchor.removeClass("stars_selected_star_hover");
            }

            // TODO - this could be more efficient 
            function reset_stars_select_classes() {
                grid_stars_select_stars_0_anchor.removeClass("stars_selected_star");
                grid_stars_select_stars_1_anchor.removeClass("stars_selected_star");
                grid_stars_select_stars_2_anchor.removeClass("stars_selected_star");
                grid_stars_select_stars_3_anchor.removeClass("stars_selected_star");
                grid_stars_select_stars_4_anchor.removeClass("stars_selected_star");
                grid_stars_select_stars_5_anchor.removeClass("stars_selected_star");

                grid_stars_select_stars_0_anchor.removeClass("stars_unselected_star");
                grid_stars_select_stars_1_anchor.removeClass("stars_unselected_star");
                grid_stars_select_stars_2_anchor.removeClass("stars_unselected_star");
                grid_stars_select_stars_3_anchor.removeClass("stars_unselected_star");
                grid_stars_select_stars_4_anchor.removeClass("stars_unselected_star");
                grid_stars_select_stars_5_anchor.removeClass("stars_unselected_star");

                if(meal.rating >= 1) {
                    grid_stars_select_stars_1_anchor.attr('class', 'stars_selected_star');
                }
                else {
                    grid_stars_select_stars_1_anchor.attr('class', 'stars_unselected_star');
                }

                if(meal.rating >= 2) {
                    grid_stars_select_stars_2_anchor.attr('class', 'stars_selected_star');
                }
                else {
                    grid_stars_select_stars_2_anchor.attr('class', 'stars_unselected_star');
                }

                if(meal.rating >= 3) {
                    grid_stars_select_stars_3_anchor.attr('class', 'stars_selected_star');
                }
                else {
                    grid_stars_select_stars_3_anchor.attr('class', 'stars_unselected_star');
                }
                if(meal.rating >= 4) {
                    grid_stars_select_stars_4_anchor.attr('class', 'stars_selected_star');
                }
                else {
                    grid_stars_select_stars_4_anchor.attr('class', 'stars_unselected_star');
                }
                if(meal.rating >= 5) {
                    grid_stars_select_stars_5_anchor.attr('class', 'stars_selected_star');
                }
                else {
                    grid_stars_select_stars_5_anchor.attr('class', 'stars_unselected_star');
                }
            }

            reset_stars_select_classes();

            function star_click(rating) {
                if(rating < 0 || rating > 5)
                    return false;
                if(meal.rating == rating)
                    return false;
                meal.rating = rating;
                updateRatingAjax(meal, rating);
                return false;
            }

            grid_stars_select_stars_0_anchor.mouseenter(
                function() {
                    reset_stars_select_classes_hover();
                    grid_stars_select_stars_1_anchor.addClass("stars_unselected_star_hover");
                    grid_stars_select_stars_2_anchor.addClass("stars_unselected_star_hover");
                    grid_stars_select_stars_3_anchor.addClass("stars_unselected_star_hover");
                    grid_stars_select_stars_4_anchor.addClass("stars_unselected_star_hover");
                    grid_stars_select_stars_5_anchor.addClass("stars_unselected_star_hover");
                    }
            );

            grid_stars_select_stars_0_anchor.click(function() {
                    star_click(0);
            });

            grid_stars_select_stars_0_anchor.appendTo(grid_stars_select_stars_0);

            var grid_stars_select_stars_1 = $(document.createElement('li'))
                .attr('class', 'star_select_menu_selection')
                .attr('name', 'star_select_menu_1')
                .attr('id', 'star_select_menu_1');

            grid_stars_select_stars_1_anchor.mouseenter(
                function() {
                    reset_stars_select_classes_hover();
                    grid_stars_select_stars_1_anchor.addClass("stars_selected_star_hover");
                    grid_stars_select_stars_2_anchor.addClass("stars_unselected_star_hover");
                    grid_stars_select_stars_3_anchor.addClass("stars_unselected_star_hover");
                    grid_stars_select_stars_4_anchor.addClass("stars_unselected_star_hover");
                    grid_stars_select_stars_5_anchor.addClass("stars_unselected_star_hover");
                    }
            );

            grid_stars_select_stars_1_anchor.click(function() {
                    star_click(1);
            });

            grid_stars_select_stars_1_anchor.appendTo(grid_stars_select_stars_1);

            var grid_stars_select_stars_2 = $(document.createElement('li'))
                .attr('class', 'star_select_menu_selection')
                .attr('name', 'star_select_menu_2')
                .attr('id', 'star_select_menu_2');

            grid_stars_select_stars_2_anchor.mouseenter(
                function() {
                    reset_stars_select_classes_hover();
                    grid_stars_select_stars_1_anchor.addClass("stars_selected_star_hover");
                    grid_stars_select_stars_2_anchor.addClass("stars_selected_star_hover");
                    grid_stars_select_stars_3_anchor.addClass("stars_unselected_star_hover");
                    grid_stars_select_stars_4_anchor.addClass("stars_unselected_star_hover");
                    grid_stars_select_stars_5_anchor.addClass("stars_unselected_star_hover");
                }
            );
            grid_stars_select_stars_2_anchor.click(function() {
                    star_click(2);
            });

            grid_stars_select_stars_2_anchor.appendTo(grid_stars_select_stars_2);

            var grid_stars_select_stars_3 = $(document.createElement('li'))
                .attr('class', 'star_select_menu_selection')
                .attr('name', 'star_select_menu_3')
                .attr('id', 'star_select_menu_3');

            grid_stars_select_stars_3_anchor.mouseenter(
                function() {
                    reset_stars_select_classes_hover();
                    grid_stars_select_stars_1_anchor.addClass("stars_selected_star_hover");
                    grid_stars_select_stars_2_anchor.addClass("stars_selected_star_hover");
                    grid_stars_select_stars_3_anchor.addClass("stars_selected_star_hover");
                    grid_stars_select_stars_4_anchor.addClass("stars_unselected_star_hover");
                    grid_stars_select_stars_5_anchor.addClass("stars_unselected_star_hover");
                }
            );

            grid_stars_select_stars_3_anchor.click(function() {
                    star_click(3);
            });
            grid_stars_select_stars_3_anchor.appendTo(grid_stars_select_stars_3);

            var grid_stars_select_stars_4 = $(document.createElement('li'))
                .attr('class', 'star_select_menu_selection')
                .attr('name', 'star_select_menu_4')
                .attr('id', 'star_select_menu_4');

            grid_stars_select_stars_4_anchor.mouseenter(
                function() {
                    reset_stars_select_classes_hover();
                    grid_stars_select_stars_1_anchor.addClass("stars_selected_star_hover");
                    grid_stars_select_stars_2_anchor.addClass("stars_selected_star_hover");
                    grid_stars_select_stars_3_anchor.addClass("stars_selected_star_hover");
                    grid_stars_select_stars_4_anchor.addClass("stars_selected_star_hover");
                    grid_stars_select_stars_5_anchor.addClass("stars_unselected_star_hover");
                }
            );

            grid_stars_select_stars_4_anchor.click(function() {
                    star_click(4);
            });
            grid_stars_select_stars_4_anchor.appendTo(grid_stars_select_stars_4);

            var grid_stars_select_stars_5 = $(document.createElement('li'))
                .attr('class', 'star_select_menu_selection')
                .attr('name', 'star_select_menu_5')
                .attr('id', 'star_select_menu_5');

            grid_stars_select_stars_5_anchor.mouseenter(
                function() {
                    reset_stars_select_classes_hover();
                    grid_stars_select_stars_1_anchor.addClass("stars_selected_star_hover");
                    grid_stars_select_stars_2_anchor.addClass("stars_selected_star_hover");
                    grid_stars_select_stars_3_anchor.addClass("stars_selected_star_hover");
                    grid_stars_select_stars_4_anchor.addClass("stars_selected_star_hover");
                    grid_stars_select_stars_5_anchor.addClass("stars_selected_star_hover");
                }
            );

            grid_stars_select_stars_5_anchor.click(function() {
                    star_click(5);
            });
            grid_stars_select_stars_5_anchor.appendTo(grid_stars_select_stars_5);

            grid_stars_select_div.mouseleave(function() {
                reset_stars_select_classes_hover();
                reset_stars_select_classes();
            });

            grid_stars_select_stars_0.appendTo(grid_stars_select);
            grid_stars_select_stars_1.appendTo(grid_stars_select);
            grid_stars_select_stars_2.appendTo(grid_stars_select);
            grid_stars_select_stars_3.appendTo(grid_stars_select);
            grid_stars_select_stars_4.appendTo(grid_stars_select);
            grid_stars_select_stars_5.appendTo(grid_stars_select);

            grid_stars_select.appendTo(grid_stars_select_div);

            // Append this to grid_stars..
            grid_stars_select_div.appendTo(grid_stars);
            
            var grid_stars_clear = $(document.createElement('div'))
                .attr('class', 'clear');

            // Append rating
            grid_stars_pre.appendTo(class8);
            grid_stars.appendTo(class8);
            grid_stars_clear.appendTo(class8);

            // If there's a restaurant associated with this meal, link to it
            if(restaurantId > 0 && restaurant != undefined) {
            }

            // If there's already a review, display it now
            var grid_review_pre = $(document.createElement('div'))
                .attr('class', 'grid_3')
                .html('Review');

            var review = "(not reviewed)";

            var grid_review = $(document.createElement('div'))
                .attr('class', 'grid_5')
                .attr('class', 'grid_review')
                .attr('id', 'pop_review')
                .attr('name', 'pop_review');


            if (meal.review != undefined && meal.review.length > 0) {
                review = meal.review;
            }

            var grid_review_textarea = $(document.createElement('textarea'))
                .attr('class', 'review_noedit')
                .attr('class', 'review_text_area')
                .attr('id', 'review_text_int')
                .attr('cols', textAreaWidthCols)
                .attr('rows', 20)
                .attr('readonly',  true)
                .html(review);

            grid_review_textarea.click(function() {

                $('#review_text_int').removeClass('review_noedit');
                $('#review_text_int').addClass('review_edit');
                $('#review_text_int').attr('readonly', false);

                // Zap the not-reviewed placeholder
                if(meal.review == undefined || meal.review.length <= 0) {
                    //grid_review_textarea.html('');
                    $('#review_text_int').html('');
                }
            });

            grid_review_textarea.keydown(function(e){
                var code = (e.keyCode ? e.keyCode : e.which);
                switch(code) {
                    case 9:
                        $('#review_text_int').blur();
                        return false;
                }
            });

            grid_review_textarea.blur(function() {
                var tmpText = $('#review_text_int').val();
                updateReviewAjax(meal, tmpText);
                if(tmpText == undefined || tmpText.length <= 0) {
                    $('#review_text_int').html('(not reviewed)');
                }
                meal.review = tmpText;

                $('#review_text_int').addClass('review_noedit');
                $('#review_text_int').removeClass('review_edit');
                $('#review_text_int').attr('readonly', true);

            });
            
            grid_review_textarea.appendTo(grid_review);

            var grid_review_clear = $(document.createElement('div'))
                .attr('class', 'clear');

            grid_review_pre.appendTo(class8);
            grid_review.appendTo(class8);
            grid_review_clear.appendTo(class8);

            // Delete this picture logic here. 
            var deletePre = $(document.createElement('div'))
                .attr('class', 'grid_3 delete_pre')
                .attr('id', 'delete_pre')
                .html('Delete');

            var deleteLink = $(document.createElement('div'))
                .attr('class', 'grid_5 delete_link')
                .attr('id', 'delete_link');

            var deleteAnchor = $(document.createElement('a'))
                .attr('class', 'delete_link_anchor')
                .attr('id', 'delete_link_anchor')
                .attr('href', 'javascript:void(0)')
                .attr('title', 'Delete this Meal')
                .html('Delete this Meal');

            var deleteClear = $(document.createElement('div'))
                .attr('class', 'clear');

            // This is a getJSON request:
            // 
            // REQUEST
            // * The username
            // * The timestamp of the deleted meal
            // * The timestamp of nextpage (if it exists)
            //
            // RESPONSE
            // * mealinfo of the new lastpicture (if it exists)
            // * new nextpage info (if it exists)
            //
            // The getJSON request and this delete-copy run concurrently.
            // It will be up to the ajax response function to load the new 
            // mealinfo and dismiss the modal.

            deleteAnchor.click(function() {

                var editGrid = $('#gridTimestamp' + meal.timestamp);
                var nextGrid = editGrid.next('.editgrid');
                var lastGrid = $('.editgrid').last();

                $.getJSON('/deletemeal',
                    {
                        username: meal.username,
                        timestamp: meal.timestamp,
                        nextpage: page_globals.nextPage
                    },
                    function(response) {
                    });

                // Walk gridpics, copying each into the last
                while(nextGrid && nextGrid.length) {

                    var intnl = editGrid.find('.editGridInternal');
                    var nxtin = nextGrid.find('.editGridInternal');

                    if(nxtin && nxtin.length) {

                        if(intnl && intnl.length) {
                            intnl.remove();
                        }
                        nxtin.remove();
                        nxtin.appendTo(editGrid);
                        editGrid = nextGrid;
                    }

                    nextGrid = nextGrid.next();
                }

                if(editGrid !== lastGrid) {
                    console.log('Ooops!  Something went very wrong ..');
                }
            });

            deleteAnchor.appendTo(deleteLink);

            // Append to modal
            deletePre.appendTo(class8);
            deleteLink.appendTo(class8);
            deleteClear.appendTo(class8);

            class8.appendTo(popup);

            var maskWidth = $(window).width();
//            var maskHeight = $(document).height();
            var maskHeight = '1200px';

            $('#maskFade').css({'width':maskWidth, 'height':maskHeight, 'opacity':0.6, 'display':'block'});

            $('#maskFade').click(function() {
                    popup.fadeOut(0);
                    $('#maskFade').css({'display':'none'});
                    popup.remove();
            });

            // Wait for the image to load
            img.load(function() {
                var lft = 800 / 2;
                var winw = $(window).width()/2;
                var popleft = winw - lft;
                popup.css('top', 30);
                popup.css('left', popleft);
                popup.appendTo('#boxes');
                popup.fadeIn(500);
            });

        }

        function showAttributes(username, timestamp) {

            $.getJSON('/ajaxgetmealinfo',
                    {
                        username: username,
                        timestamp: timestamp
                    },
                    function(response) {
                        if(response.errStr != undefined && response.errStr.length > 0) {
                            if(response.errStr == "signin") {
                                window.location.replace("/signin");
                            }
                            if(response.errStr == "wronguser") {
                                window.location.replace("/");
                            }
                            // TODO - draw an elegant page for this case
                            // TODO - elegant handling of all error - maybe have a box at the box
                            // which informs the user if/when this occurs
                            if(response.errStr == "nomeal") {
                                window.location.replace("/");
                            }
                        }
                        else {
                            showAttributesMealInfo(response.mealInfo, response.restaurantInfo, response.restaurantId);
                        }
                    });
        }

        function pictureDiv(meal, mealIdx, callback, lastpic) {

            var gridId = 'gridIndex' + mealIdx;
            var tsId = 'gridTimestamp' + meal.timestamp;

            // Id this with both an index and a timestamp
            var editgrid = $(document.createElement('div'))
                .attr('id', gridId)
                .attr('id', tsId)
                .attr('class', 'grid_4 editheight editgrid');

            // I can manipulate this directly in the delete code.
            var editInternal = $(document.createElement('div'))
                .attr('class', 'editGridInternal');

            editInternal.appendTo(editgrid);

            var center = $(document.createElement('center'));
            center.appendTo(editInternal);

            var mealtxt = meal.meal.charAt(0).toUpperCase() + meal.meal.slice(1);
            var hoverDate = new Date(meal.timestamp).toLocaleDateString();
            var hoverTxt = mealtxt + " uploaded " + hoverDate;

            var editImageDiv = $(document.createElement('div'))
                .attr('class', 'editImage');

            editImageDiv.appendTo(center);

            var anchor = $(document.createElement('a'))
                .attr('href', 'javascript:void(0)')
                .attr('title', hoverTxt);
                
            anchor.click(function() {
                showAttributes(meal.username, meal.timestamp);
            });

            anchor.appendTo(editImageDiv);

            var imgSource = '/thumbs/' + meal.username + '/' + meal.timestamp;

            var image = $(document.createElement('img'))
                .attr('class', 'editImage')
                .attr('src', imgSource);

            if(callback) {
                image.load(function() {
                    callback(lastpic);
                });
            }

            image.appendTo(anchor);

            var titletext = $(document.createElement('div'))
                .attr('class', 'titleText');

            if(meal.picTitle != undefined && meal.picTitle.length > 0) {
                titletext.html(meal.picTitle);
            }
            else {
                titletext.html('untitled');
            }

            titletext.appendTo(center);

            // Return the top-level thing
            return editgrid;
        }

        function nextPrevPageLinks(nextpage, prevpage) {
            var prevGrid;
            var nextGrid;
            var createdPrev=false;
            var createdNext=false;
            var nextPrev;

            if(
                (undefined == nextpage || nextpage <= 0) &&
                (undefined == prevpage || prevpage <= 0)
            )
            {
                return;
            }

            if(undefined != prevpage && prevpage > 0) {
                prevGrid = $(document.createElement('div'))
                    .attr('class', 'grid_2');

                var prevCenter = $(document.createElement('center'));

                var prevAnchor = $(document.createElement('a'))
                    .attr('href', 'javascript:void(0)')
                    .html('Previous Page');

                prevAnchor.click(function() {
                    drawPrevMeals(prevpage);
                });

                prevCenter.appendTo(prevGrid);
                prevAnchor.appendTo(prevCenter);
                createdPrev = true;
            }

            if(undefined != nextpage && nextpage > 0) {
                nextGrid = $(document.createElement('div'))
                    .attr('class', 'grid_2');
                
                var nextCenter = $(document.createElement('center'));

                var nextAnchor = $(document.createElement('a'))
                    .attr('href', 'javascript:void(0)')
                    .html('Next Page');
                    
                nextAnchor.click(function() {
                    drawNextMeals(nextpage);
                });

                nextCenter.appendTo(nextGrid);
                nextAnchor.appendTo(nextCenter);
                createdNext = true;
            }

            if(createdPrev && !createdNext) {
                prevGrid.addClass('suffix_10');
            }

            if(!createdPrev && createdNext) {
                nextGrid.addClass('prefix_10');
            }

            if(createdPrev && createdNext) {
                prevGrid.addClass('suffix_4');
                nextGrid.addClass('previx_4');
            }

            var clearnextprev = $(document.createElement('div'))
                .attr('class', 'clear');

            nextPrev = $('#nextprev');
            nextPrev.empty();

            if(createdPrev) {
                prevGrid.appendTo(nextPrev);
            }

            if(createdNext) {
                nextGrid.appendTo(nextPrev);
            }

            clearnextprev.appendTo(nextPrev);

            // Update globals
            page_globals.nextPage = nextPage;
            page_globals.prevPage = prevPage;
        }

        function pictureGridInner(mealinfo, showPicsPerPage, callback)
        {
            var pictureGrid = $(document.createElement('div'))
                .attr('class', 'pictureGrid');

            if(mealinfo && mealinfo.length < showPicsPerPage) {
                endpic = mealinfo.length;
            }
            else {
                endpic = showPicsPerPage;
            }

            for(cnt = 0 ; cnt < showPicsPerPage ; cnt++) {
                if(cnt < endpic) {
                    var meal = mealinfo[cnt];
                    var gridpic = pictureDiv(meal, cnt, callback, endpic);

                    gridpic.appendTo(pictureGrid);

                    if(cnt % 3 == 2) {
                        var divclear = $(document.createElement('div'))
                            .attr('class', 'clear');
                        divclear.appendTo(pictureGrid);
                    }
                }
            }

            return pictureGrid;
        }

        function displayPictureGrid(mealinfo, nextpage, prevpage, isnext) {

            var showPicsPerPage = page_globals.showPicsPerPage;
            var pictureGridContainer = $('#pictureGridContainer');

            if(mealinfo != undefined && mealinfo.length > 0) {
                var loaded = 0;
                var pictureGridNew = pictureGridInner(mealinfo, showPicsPerPage, function (showImages) {
                    loaded++;

                    if(loaded == showImages) {

                        $('#pictureGrid').remove();
                        pictureGridNew.css({'display': 'none'});
                        pictureGridNew.attr('id', 'pictureGrid');
                        pictureGridNew.appendTo($('#pictureGridDiv'));
                        pictureGridNew.css({'display': 'block'});
                        nextPrevPageLinks(nextpage, prevpage);
                    }
                });
            }
            else {
                // TODO - if this is the first time that a user has logged on, 
                // maybe a friendly 'To get you started' popup .. ?
                // Make this a pop-up - something that's informative.  It'll
                // be something you just dismiss.
                $('#pictureGridDiv').html('<center><b>No Meals to View</b><center>');
            }

        }

        function drawNextMeals(nextpage) {

            // Make this an ajax request that will return enough information
            $.getJSON('/editpagenext',
                    {
                        username: page_globals.username,
                        nextpage: nextpage,
                        count: page_globals.showPicsPerPage
                    },
                    function(response) {
                        if(response.errStr != undefined && response.errStr.length > 0) {
                            // Send this error to a space at the top..
                            console.log('editpagenext error: ' + response.errStr);
                        }
                        else {
                            displayPictureGrid(response.mealinfo, response.nextpage, response.prevpage, true);
                        }
                    });
            return 0;
        }

        function drawPrevMeals(prevpage) {
            $.getJSON('/editpageprev',
                    {
                        username: page_globals.username,
                        prevpage: prevpage,
                        count: page_globals.showPicsPerPage
                    },
                    function(response) {
                        if(response.errStr != undefined && response.errStr.length > 0) {
                            // Send this error to a space at the top..
                            console.log('editpageprev error: ' + response.errStr);
                        }
                        else {
                            displayPictureGrid(response.mealinfo, response.nextpage, response.prevpage, false);
                        }
                    });
            return 0;
        }

        $(document).ready(function() {
            $.ajaxSetup ({ cache: false });

            var minfo = new Array();

            function truncMeal(username, timestamp, picTitle, meal, thumbWidth, thumbHeight) {
                this.username = username;
                this.timestamp = timestamp;
                this.picTitle = picTitle;
                this.meal = meal;
                this.thumbWidth = thumbWidth;
                this.thumbHeight = thumbHeight;
                return this;
            }
            
            <% 
            if( mealinfo && mealinfo.length > 0 ) { 
                for(var i = 0 ; i < mealinfo.length ; i++) {
                    var meal = mealinfo[i];
            %>

            // Start meals
            minfo[<%= i %>] = new truncMeal(
                    "<%= meal.username %>",
                    <%= meal.timestamp %>,
                    "<%= meal.picTitle %>",
                    "<%= meal.meal %>",
                    <%= meal.thumbWidth %>,
                    <%= meal.thumbHeight %>);
            <%
                }  
            } 
            %>

            displayPictureGrid(minfo, page_globals.nextpage, page_globals.prevpage, true);
        });


    </script>


        <div class="boxesClass" id="boxes">
        <div class="container_12" id="boxes_container">

            <div class="grid_2 prefix_10">
                <!-- maybe a menu here.. ? -->
                <a href='javascript:void(0)' onclick='uploadMealPopup()'>Upload a Meal</a>
            </div>
            <div class="clear"></div>

            <div class="grid_2 prefix_10">
                <div id='deleteModeDiv'> </div>
                <!-- Not sure about 'deletemode' yet -->
            </div>
            <div class="clear"></div>

            <div class="grid_2 prefix_10">
                <!-- maybe a menu here.. ? -->
                <a href="/signout">Logout</a>
            </div>
            <div class="clear"></div>
            <br><br>

            <div pictureGridDiv class='pictureGridDiv' id='pictureGridDiv' name='pictureGridDiv'>
                <div pictureGrid class='pictureGrid' id='pictureGrid' name='pictureGrid'>
                </div>
            </div>


            <div nextPrev class='nextprev' id='nextprev' name='nextprev'>
            </div>

        </div> <!-- container_12 -->
        </div> <!-- boxes -->
        <div id="maskFade" class="maskClass"></div>
        <div id="hiddenElements" class="hiddenElements" name="hiddenElements"></div>
    </body>
</html>
